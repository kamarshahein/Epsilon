# -*- coding: utf-8 -*-
"""project_movies_the final_ - Copy.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1N7C7iBihH_CBdXQzHtVAc6-D10rWQjtn

# Import libreraies
"""

import numpy as np 
import pandas as pd
import matplotlib.pyplot as plt
import string

#Plots
import matplotlib.pyplot as plt
import seaborn as sns

movies = pd.read_csv('/content/netflix_titles.csv')

movies.head(5)

columns = movies.columns
from sklearn.impute import SimpleImputer
imputer = SimpleImputer(strategy="most_frequent")
X = movies.values
X = imputer.fit_transform(X)
movies = pd.DataFrame(X)
movies.columns = columns
movies.head()

movies.isnull().sum()

"""## **Cleaning data**"""

movies.shape

movies.nunique()

movies.describe()

#numbers of years
print(movies['release_year'].min())
print(movies['release_year'].max())

#names of columns
movies.columns

#drop columns that we do not need
df_movies = movies.drop(['show_id','director', 'cast','rating', 'date_added', 'description'], axis = 1) 
df_movies.head(10)

#rename column(listed_in)to (category) 
df = df_movies.rename(columns={'listed_in':'category'})
df

#remove rows with null values
df.dropna(inplace = True)
df.isnull().sum()
df.shape

a=df[df['category']=="Documentaries"]

a

b=df[df['category']=="Dramas"]

b

df['category'] = df['category'].str.replace('&',',')
df

new_data = df["category"].str.split(",", n = 5, expand = True)
new_data

new_data1=df.merge(new_data, left_index=True, right_index = True)
new_data1.head()

new_data2 = new_data1.drop(['category'], axis = 1) 
new_data2.head(10)

new_data3 = new_data2.drop([5], axis = 1) 
print(new_data3.head(10))
print(new_data3.shape)

new_data3

df1=new_data3.rename(columns={0 :'A'})
df2=df1.rename(columns={1 :'B'})
df3=df2.rename(columns={2 :'C'})
df4=df3.rename(columns={3 :'D'})
df5=df4.rename(columns={4 :'E'})

df5

df6=df5.fillna(df5.mode().iloc[0])
df6

df6.isnull()

df6.isnull().sum()

"""## **Some information about the movies**"""

df6.columns

movies.columns

df6.loc[df6['title'] == 'Surviving R. Kelly Part II: The Reckoning']

df6.loc[df6['title'] == 'Cuddle Weather']

df6.loc[df6['release_year'] == 2021]

df6.loc[df6['release_year'] == 1925]

df6.loc[df6['release_year'] ==2000]

df6.loc[df6['release_year'] == 2000].shape

df6.nunique()

#Countries with most movies / Tv shows
df['country'].value_counts().head(10)

movies = df[df['type'] == 'Movie']
tv_show = df[df['type'] == 'TV Show']
print(movies.shape,tv_show.shape)

#The number of movies and TV shows in each category in coulumn A
print(df6['A'].value_counts())

df6

"""# **Exploratory Data Analysis**
Some Plots for all Features

## **Type**
"""

sns.countplot(x = 'type' , data = df6)
plt.title('Count Vs Type of  TV Shows ')

s = df6.type.value_counts()[:10].tolist()
s1 = df6.type.value_counts()[:10].index.tolist()

plt.figure(figsize=(10, 10))
plt.pie(s , labels=s1 , autopct='%1.0f%%'  )
plt.title('Top 10 types with movies and tv shows')

"""## **Release year**  """

ii=df6.loc[df6['release_year'] == 2020]
ii.head()

ii.shape

c = df6.release_year.value_counts()[:10].tolist()
c1 = df6.release_year.value_counts()[:10].index.tolist()

plt.figure(figsize=(10, 10))
plt.pie(c , labels=c1 , autopct='%1.0f%%'  )
plt.title('Top 10 types with showes per year')

plt.rcParams["figure.figsize"] = (10, 5)
df6.hist(bins=20)
plt.show()

plt.figure(figsize = (40,120))
sns.countplot(y = 'release_year' , data = df6 )
plt.title('Nomber of shows per year on Netflix ')

"""## **Duration**"""

df.duration.head(20)

df6.duration.value_counts(ascending = False)

plt.figure(figsize = (12,10))
sns.countplot(x='duration' ,order = df6['duration'].value_counts().index[0:10],data = df6)
plt.title('duration of Shows on Netflix Vs Count')

"""## **Country**"""

plt.figure(figsize = (10,6))
sns.countplot(x = 'country' ,order = df6['country'].value_counts().index[:10] , data = df6) 
plt.title('Top 10 countries in which most movies and TV shows have been released')

values = df6.country.value_counts()[:10].tolist()
labels = df6.country.value_counts()[:10].index.tolist()

plt.figure(figsize=(10, 10))
plt.pie(values , labels=labels , autopct='%1.0f%%'  )
plt.title('Top 10 countries with movies and tv shows')

"""## **Column A** """

plt.figure(figsize = (15,8))
sns.countplot(x = 'A' ,order = df6['A'].value_counts().index[:10] , data = df6) 
plt.title('Top 10 A categories ')

m = df6.A.value_counts()[:10].tolist()
m1 = df6.A.value_counts()[:10].index.tolist()
plt.figure(figsize=(10, 10))
plt.pie(m , labels=m1 , autopct='%1.0f%%'  )
plt.title('Top 10 A countries with movies and tv shows')

"""## **Column B**"""

plt.figure(figsize = (18,8))
sns.countplot(x = 'B' ,order = df6['B'].value_counts().index[:10] , data = df6) 
plt.title('Top 10 B categories ')

n = df6.A.value_counts()[:10].tolist()
n1 = df6.A.value_counts()[:10].index.tolist()
plt.figure(figsize=(10, 10))
plt.pie(n , labels=n1 , autopct='%1.0f%%'  )
plt.title('Top 10 B countries with movies and tv shows')

"""# **Thank you**"""